[build-system]
requires = ["setuptools>=48", "setuptools_scm[toml]>=6.3.1"]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]

[project]
name = "dvc-objects"
description = "dvc objects"
readme = "README.rst"
license = {text = "Apache-2.0"}
authors = [{ name = "Iterative", email = "support@dvc.org" }]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Development Status :: 4 - Beta",
]
requires-python = ">=3.8"
dynamic = ["version"]
dependencies = [
    "tqdm>=4.63.1,<5",
    "shortuuid>=0.5.0",
    "funcy>=1.14",
    "fsspec>=2022.10.0",
    "typing-extensions>=3.7.4",
    "packaging>=19",
]

[project.urls]
Issues = "https://github.com/iterative/dvc-objects/issues"
Source = "https://github.com/iterative/dvc-objects"

[project.optional-dependencies]
tests = [
    "pytest==7.2.0",
    "pytest-sugar==0.9.6",
    "pytest-cov==4.0.0",
    "pytest-mock==3.8.2",
    "mypy==1.5.1",
    "pytest-servers[s3]==0.1.3",
]
dev = [
    "dvc-objects[tests]",
    "types-tqdm",
]

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.setuptools.package-data]
dvc_objects = ["py.typed"]

[tool.pytest.ini_options]
addopts = "-ra -Werror"

[tool.coverage.run]
branch = true
source = ["dvc_objects", "tests"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if __name__ == .__main__.:",
    "if typing.TYPE_CHECKING:",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "raise AssertionError",
    "@overload",
]

[tool.mypy]
# Error output
show_column_numbers = true
show_error_codes = true
show_error_context = true
show_traceback = true
pretty = true
check_untyped_defs = true
# Warnings
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
strict_equality = true
no_implicit_optional = true
warn_unused_configs = true
files = ["src", "tests"]

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
    "fsspec.*",
    "funcy",
]

[tool.codespell]
ignore-words-list = " "
